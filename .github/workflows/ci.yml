name: CI

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  CACHE_VERSION: 'v1'
  ELIXIR_VERSION: '1.14.0'
  MIX_ENV: 'test'
  OTP_VERSION: '25.0.4'

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ecto_ksuid_test
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
          version-type: strict

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v2
        id: mix-deps-cache
        with:
          path: deps/**
          key: ${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-mix-deps-cache-${{ env.CACHE_VERSION }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-mix-deps-cache-

      - name: Retrieve Build Cache
        uses: actions/cache@v2
        id: mix-build-cache
        with:
          path: _build/**
          key: ${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-test-build-cache-${{ env.CACHE_VERSION }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-test-build-cache-

      - name: Install Mix Depenencies
        if: steps.mix-deps-cache.outputs.cache-hit != 'true'
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Compile Dependencies
        if: steps.mix-build-cache.outputs.cache-hit != 'true'
        run: |
          mix deps.compile
          MIX_ENV=dev mix deps.compile
          MIX_ENV=dev mix dialyzer --plt

      - name: mix compile
        run: mix compile

      - name: mix format
        run: mix format --check-formatted

      - name: mix credo
        run: mix credo

      - name: mix diayzer
        run: MIX_ENV=dev mix dialyzer

      - name: mix test
        env:
          DATABASE_URL: 'ecto://postgres:postgres@0.0.0.0/ecto_ksuid_test'
        run: mix test --cover

      - name: mix coveralls.github
        env:
          DATABASE_URL: 'ecto://postgres:postgres@0.0.0.0/ecto_ksuid_test'
        run: mix coveralls.github

      - name: mix docs
        run: mix docs
